# name: Fetch Repository Variables

# on:
#   workflow_dispatch: # Allows manual triggering of the workflow

# jobs:
#   fetch_variables:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Install jq
#         run: sudo apt-get install jq

#       - name: Fetch Repository Variables
#         id: fetch_vars

#         run: |
#           response=$(curl -s -H "Authorization: token ${{ secrets.MY_PAT }}" \
#             -H "Accept: application/vnd.github.v3+json" \
#             "https://api.github.com/repos/${{ github.repository }}/actions/secrets")

#             echo "API Response: $response"

#           # Check if variables exist
#           variables_count=$(echo "$response" | jq '.variables | length')
#           if [[ $variables_count -eq 0 ]]; then
#             echo "No repository variables found."
#             exit 0
#           fi

#            # Create .env file
#           echo "$response" | jq -r '.variables[] | "\(.name)=\(.value)"' > .env

#           # Check if the .env file was created successfully
#           if [[ -f .env ]]; then
#             echo ".env file created successfully."
#           else
#             echo "Failed to create .env file."
#             exit 1
#           fi

#       - name: Upload .env file
#         uses: actions/upload-artifact@v2
#         with:
#           name: env-file
#           path: .env
name: Fetch Repository Variables

on:
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  fetch_variables:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Fetch Repository Variables
        id: fetch_vars
        run: |
          # Fetch secrets from the GitHub API
          response=$(curl -s -H "Authorization: token ${{ secrets.MY_PAT }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/secrets")

          # Log the response for debugging
          echo "API Response: $response"

          # Check if variables exist
          variables_count=$(echo "$response" | jq '.secrets | length')
          if [[ $variables_count -eq 0 ]]; then
            echo "No repository secrets found."
            exit 0
          fi

          # Create .env file
          echo "$response" | jq -r '.secrets[] | "\(.name)=\(.value)"' > .env

          # Check if the .env file was created successfully
          if [[ -f .env ]]; then
            echo ".env file created successfully."
          else
            echo "Failed to create .env file."
            exit 1
          fi

      - name: Upload .env file
        uses: actions/upload-artifact@v2
        with:
          name: env-file
          path: .env
          if-no-files-found: warn
